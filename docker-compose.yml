version: "3"
services:
  nginx:
    image: nginx:latest
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/log/nginx
      - /var/run
    depends_on:
      - api
    ports:
      - "3000:80"
    volumes:
      - ./config/nginx-snippets:/etc/nginx/snippets:ro
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  # Data API and authentication/authorization
  api:
    image: node:boron
    hostname: api
    depends_on:
      - db
      - redis
    environment:
      - NODE_ENV=production

    expose:
      - "3000"
    ports:
      - "127.0.0.1:9229:9229" # V8 inspector for tools/run.js
      - "127.0.0.1:9230:9230" # V8 inspector for src/serer.js
    volumes:
      - yarn:/root/.cache/yarn
      - ./:/usr/src/app
    user: node
    working_dir: /usr/src/app
    command: node server/index.js # or, `node --inspect=0.0.0.0:9229 tools/run.js`

  db:
    image: postgres:latest
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - db:/var/lib/postgresql/data
      - ./config/postgres-initdb.sh:/docker-entrypoint-initdb.d/initdb.sh

  # Distributed in-memory cache
  redis:
    image: redis:latest
    volumes:
      - redis:/data
    user: redis
networks:
  webnet:
volumes:
  db:
  redis:
  yarn:
